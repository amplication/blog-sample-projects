/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsInt,
  ValidateNested,
  IsDate,
} from "class-validator";
import { PersonUpdateManyWithoutFilmsInput } from "./PersonUpdateManyWithoutFilmsInput";
import { Type } from "class-transformer";
import { PlanetUpdateManyWithoutFilmsInput } from "./PlanetUpdateManyWithoutFilmsInput";
import { IsJSONValue } from "@app/custom-validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { RaceUpdateManyWithoutFilmsInput } from "./RaceUpdateManyWithoutFilmsInput";
import { StarshipUpdateManyWithoutFilmsInput } from "./StarshipUpdateManyWithoutFilmsInput";
import { VehicleUpdateManyWithoutFilmsInput } from "./VehicleUpdateManyWithoutFilmsInput";

@InputType()
class FilmUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  director?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  episodeId?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  openingCrawl?: string | null;

  @ApiProperty({
    required: false,
    type: () => PersonUpdateManyWithoutFilmsInput,
  })
  @ValidateNested()
  @Type(() => PersonUpdateManyWithoutFilmsInput)
  @IsOptional()
  @Field(() => PersonUpdateManyWithoutFilmsInput, {
    nullable: true,
  })
  person?: PersonUpdateManyWithoutFilmsInput;

  @ApiProperty({
    required: false,
    type: () => PlanetUpdateManyWithoutFilmsInput,
  })
  @ValidateNested()
  @Type(() => PlanetUpdateManyWithoutFilmsInput)
  @IsOptional()
  @Field(() => PlanetUpdateManyWithoutFilmsInput, {
    nullable: true,
  })
  planet?: PlanetUpdateManyWithoutFilmsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  producers?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => RaceUpdateManyWithoutFilmsInput,
  })
  @ValidateNested()
  @Type(() => RaceUpdateManyWithoutFilmsInput)
  @IsOptional()
  @Field(() => RaceUpdateManyWithoutFilmsInput, {
    nullable: true,
  })
  race?: RaceUpdateManyWithoutFilmsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  releaseDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => StarshipUpdateManyWithoutFilmsInput,
  })
  @ValidateNested()
  @Type(() => StarshipUpdateManyWithoutFilmsInput)
  @IsOptional()
  @Field(() => StarshipUpdateManyWithoutFilmsInput, {
    nullable: true,
  })
  starship?: StarshipUpdateManyWithoutFilmsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: () => VehicleUpdateManyWithoutFilmsInput,
  })
  @ValidateNested()
  @Type(() => VehicleUpdateManyWithoutFilmsInput)
  @IsOptional()
  @Field(() => VehicleUpdateManyWithoutFilmsInput, {
    nullable: true,
  })
  vehicle?: VehicleUpdateManyWithoutFilmsInput;
}

export { FilmUpdateInput as FilmUpdateInput };
