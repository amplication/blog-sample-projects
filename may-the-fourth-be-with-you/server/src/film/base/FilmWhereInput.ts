/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { PersonListRelationFilter } from "../../person/base/PersonListRelationFilter";
import { PlanetListRelationFilter } from "../../planet/base/PlanetListRelationFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { RaceListRelationFilter } from "../../race/base/RaceListRelationFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StarshipListRelationFilter } from "../../starship/base/StarshipListRelationFilter";
import { VehicleListRelationFilter } from "../../vehicle/base/VehicleListRelationFilter";

@InputType()
class FilmWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  director?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  episodeId?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  openingCrawl?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PersonListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PersonListRelationFilter)
  @IsOptional()
  @Field(() => PersonListRelationFilter, {
    nullable: true,
  })
  person?: PersonListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PlanetListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PlanetListRelationFilter)
  @IsOptional()
  @Field(() => PlanetListRelationFilter, {
    nullable: true,
  })
  planet?: PlanetListRelationFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  producers?: JsonFilter;

  @ApiProperty({
    required: false,
    type: () => RaceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RaceListRelationFilter)
  @IsOptional()
  @Field(() => RaceListRelationFilter, {
    nullable: true,
  })
  race?: RaceListRelationFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  releaseDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => StarshipListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StarshipListRelationFilter)
  @IsOptional()
  @Field(() => StarshipListRelationFilter, {
    nullable: true,
  })
  starship?: StarshipListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  title?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => VehicleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => VehicleListRelationFilter)
  @IsOptional()
  @Field(() => VehicleListRelationFilter, {
    nullable: true,
  })
  vehicle?: VehicleListRelationFilter;
}

export { FilmWhereInput as FilmWhereInput };
