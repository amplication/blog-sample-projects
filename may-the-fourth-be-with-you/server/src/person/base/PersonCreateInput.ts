/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsInt,
  IsNumber,
} from "class-validator";
import { FilmCreateNestedManyWithoutPeopleInput } from "./FilmCreateNestedManyWithoutPeopleInput";
import { Type } from "class-transformer";
import { PlanetWhereUniqueInput } from "../../planet/base/PlanetWhereUniqueInput";
import { RaceCreateNestedManyWithoutPeopleInput } from "./RaceCreateNestedManyWithoutPeopleInput";
import { StarshipCreateNestedManyWithoutPeopleInput } from "./StarshipCreateNestedManyWithoutPeopleInput";
import { VehicleCreateNestedManyWithoutPeopleInput } from "./VehicleCreateNestedManyWithoutPeopleInput";

@InputType()
class PersonCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  birthYear?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  eyeColor?: string | null;

  @ApiProperty({
    required: false,
    type: () => FilmCreateNestedManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => FilmCreateNestedManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => FilmCreateNestedManyWithoutPeopleInput, {
    nullable: true,
  })
  films?: FilmCreateNestedManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  gender?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  hairColor?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  height?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  mass?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => PlanetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlanetWhereUniqueInput)
  @IsOptional()
  @Field(() => PlanetWhereUniqueInput, {
    nullable: true,
  })
  planet?: PlanetWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => RaceCreateNestedManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => RaceCreateNestedManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => RaceCreateNestedManyWithoutPeopleInput, {
    nullable: true,
  })
  races?: RaceCreateNestedManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  skinColor?: string | null;

  @ApiProperty({
    required: false,
    type: () => StarshipCreateNestedManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => StarshipCreateNestedManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => StarshipCreateNestedManyWithoutPeopleInput, {
    nullable: true,
  })
  starships?: StarshipCreateNestedManyWithoutPeopleInput;

  @ApiProperty({
    required: false,
    type: () => VehicleCreateNestedManyWithoutPeopleInput,
  })
  @ValidateNested()
  @Type(() => VehicleCreateNestedManyWithoutPeopleInput)
  @IsOptional()
  @Field(() => VehicleCreateNestedManyWithoutPeopleInput, {
    nullable: true,
  })
  vehicles?: VehicleCreateNestedManyWithoutPeopleInput;
}

export { PersonCreateInput as PersonCreateInput };
