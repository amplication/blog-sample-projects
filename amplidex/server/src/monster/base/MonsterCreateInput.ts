/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsInt, ValidateNested, IsOptional } from "class-validator";
import { GenerationWhereUniqueInput } from "../../generation/base/GenerationWhereUniqueInput";
import { Type } from "class-transformer";
import { TypingCreateNestedManyWithoutMonstersInput } from "./TypingCreateNestedManyWithoutMonstersInput";

@InputType()
class MonsterCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  biology!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  dexNumber!: number;

  @ApiProperty({
    required: true,
    type: () => GenerationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => GenerationWhereUniqueInput)
  @Field(() => GenerationWhereUniqueInput)
  generation!: GenerationWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  image!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: () => TypingCreateNestedManyWithoutMonstersInput,
  })
  @ValidateNested()
  @Type(() => TypingCreateNestedManyWithoutMonstersInput)
  @IsOptional()
  @Field(() => TypingCreateNestedManyWithoutMonstersInput, {
    nullable: true,
  })
  typing?: TypingCreateNestedManyWithoutMonstersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  url!: string;
}

export { MonsterCreateInput };
